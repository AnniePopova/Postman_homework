{
	"info": {
		"_postman_id": "da52f6e6-cf71-45a6-8282-5ccc8014ecff",
		"name": "HW",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27631618"
	},
	"item": [
		{
			"name": "1",
			"item": [
				{
					"name": "get_method",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://162.55.220.72:5005/get_method?name=Ivan&age=28",
							"protocol": "http",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"get_method"
							],
							"query": [
								{
									"key": "name",
									"value": "Ivan"
								},
								{
									"key": "age",
									"value": "28"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "user_info_3",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "Ivan",
									"type": "text"
								},
								{
									"key": "age",
									"value": "28",
									"type": "text"
								},
								{
									"key": "salary",
									"value": "10000",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://162.55.220.72:5005/user_info_3",
							"protocol": "http",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"user_info_3"
							]
						}
					},
					"response": []
				},
				{
					"name": "object_info_1",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://162.55.220.72:5005/object_info_1?name=Ivan&age=28&weight=65",
							"protocol": "http",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"object_info_1"
							],
							"query": [
								{
									"key": "name",
									"value": "Ivan"
								},
								{
									"key": "age",
									"value": "28"
								},
								{
									"key": "weight",
									"value": "65"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "object_info_2",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://162.55.220.72:5005/object_info_2?name=Ivan&age=28&salary=10000",
							"protocol": "http",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"object_info_2"
							],
							"query": [
								{
									"key": "name",
									"value": "Ivan"
								},
								{
									"key": "age",
									"value": "28"
								},
								{
									"key": "salary",
									"value": "10000"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "object_info_3",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://162.55.220.72:5005/object_info_3?name=Ivan&age=28&salary=10000",
							"protocol": "http",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"object_info_3"
							],
							"query": [
								{
									"key": "name",
									"value": "Ivan"
								},
								{
									"key": "age",
									"value": "28"
								},
								{
									"key": "salary",
									"value": "10000"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "object_info_4",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://162.55.220.72:5005/object_info_4?name=Ivan&age=28&salary=10000",
							"protocol": "http",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"object_info_4"
							],
							"query": [
								{
									"key": "name",
									"value": "Ivan"
								},
								{
									"key": "age",
									"value": "28"
								},
								{
									"key": "salary",
									"value": "10000"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "user_info_2",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "Ivan",
									"type": "text"
								},
								{
									"key": "age",
									"value": "28",
									"type": "text"
								},
								{
									"key": "salary",
									"value": "10000",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://162.55.220.72:5005/user_info_2",
							"protocol": "http",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"user_info_2"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "2",
			"item": [
				{
					"name": "first",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body is correct\", function () {\r",
									"    pm.response.to.have.body(\"This is the first responce from server!ss\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://162.55.220.72:5005/first",
							"protocol": "http",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"first"
							]
						}
					},
					"response": []
				},
				{
					"name": "user_info_3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"let resp = pm.response.json();\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    pm.expect(resp.name).to.eql('Ivan');\r",
									"});\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    pm.expect(resp.age).to.eql(\"28\");\r",
									"});\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    pm.expect(resp.salary).to.eql(10000);\r",
									"});\r",
									"\r",
									"let req = request.data;\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    pm.expect(resp.name).to.eql(req.name);\r",
									"});\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    pm.expect(resp.age).to.eql(req.age);\r",
									"});\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    pm.expect(resp.salary).to.eql(+req.salary);\r",
									"});\r",
									"\r",
									"console.log(resp.family);\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    pm.expect(resp.family.u_salary_1_5_year).to.eql(+req.salary * 4);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "Ivan",
									"type": "text"
								},
								{
									"key": "age",
									"value": "28",
									"type": "text"
								},
								{
									"key": "salary",
									"value": "10000",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://162.55.220.72:5005/user_info_3",
							"protocol": "http",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"user_info_3"
							]
						}
					},
					"response": []
				},
				{
					"name": "object_info_3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"let resp = pm.response.json();\r",
									"let req = pm.request.url.query.toObject();\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    pm.expect(resp.name).to.eql(req.name);\r",
									"});\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    pm.expect(resp.age).to.eql(req.age);\r",
									"});\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    pm.expect(resp.salary).to.eql(+req.salary);\r",
									"});\r",
									"\r",
									"console.log(resp.family);\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    pm.expect(resp.family.pets.dog).to.haveOwnProperty('name');\r",
									"});\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    pm.expect(resp.family.pets.dog).to.haveOwnProperty('age');\r",
									"});\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    pm.expect(resp.family.pets.dog.name).to.eql('Luky');\r",
									"});\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    pm.expect(resp.family.pets.dog.age).to.eql(4);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "http://162.55.220.72:5007/object_info_3?name=Ivan&age=28&salary=10000",
							"protocol": "http",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5007",
							"path": [
								"object_info_3"
							],
							"query": [
								{
									"key": "name",
									"value": "Ivan"
								},
								{
									"key": "age",
									"value": "28"
								},
								{
									"key": "salary",
									"value": "10000"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "object_info_4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"let resp = pm.response.json();\r",
									"let req = pm.request.url.query.toObject();\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    pm.expect(resp.name).to.eql(req.name);\r",
									"});\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    pm.expect(resp.age).to.eql(+req.age);\r",
									"});\r",
									"\r",
									"console.log(req.salary);\r",
									"console.log(resp.salary);\r",
									"console.log(resp.salary[0]);\r",
									"console.log(resp.salary[1]);\r",
									"console.log(resp.salary[2]);\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    pm.expect(resp.salary[0]).to.eql(+req.salary);\r",
									"});\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    pm.expect(+resp.salary[1]).to.eql(+req.salary * 2);\r",
									"});\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    pm.expect(+resp.salary[2]).to.eql(+req.salary * 3);\r",
									"});\r",
									"\r",
									"pm.environment.set(\"name\", req.name);\r",
									"pm.environment.set(\"age\", req.age);\r",
									"pm.environment.set(\"salary\", req.salary);\r",
									"\r",
									"for (i in resp.salary) {\r",
									"    console.log(resp.salary[i]);\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://162.55.220.72:5005/object_info_4?name=Ivan&age=28&salary=10000",
							"protocol": "http",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"object_info_4"
							],
							"query": [
								{
									"key": "name",
									"value": "Ivan"
								},
								{
									"key": "age",
									"value": "28"
								},
								{
									"key": "salary",
									"value": "10000"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "user_info_2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"let resp = pm.response.json();\r",
									"let req = request.data;\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    pm.expect(resp).to.haveOwnProperty(\"start_qa_salary\");\r",
									"});\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    pm.expect(resp).to.haveOwnProperty(\"qa_salary_after_6_months\");\r",
									"});\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    pm.expect(resp).to.haveOwnProperty(\"qa_salary_after_12_months\");\r",
									"});\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    pm.expect(resp).to.haveOwnProperty(\"qa_salary_after_1.5_year\");\r",
									"});\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    pm.expect(resp).to.haveOwnProperty(\"qa_salary_after_3.5_years\");\r",
									"});\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    pm.expect(resp).to.haveOwnProperty(\"person\");\r",
									"});\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    pm.expect(resp.start_qa_salary).to.eql(+req.salary);\r",
									"});\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    pm.expect(resp.qa_salary_after_6_months).to.eql(+req.salary * 2);\r",
									"});\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    pm.expect(resp.qa_salary_after_12_months).to.eql(+req.salary * 2.7);\r",
									"});\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    pm.expect(resp['qa_salary_after_1.5_year']).to.eql(req.salary * 3.3);\r",
									"});\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    pm.expect(resp['qa_salary_after_3.5_years']).to.eql(req.salary * 3.8);\r",
									"});\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    pm.expect(resp.person.u_name[1]).to.eql(+req.salary);\r",
									"});\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    pm.expect(resp.person.u_age).to.eql(+req.age);\r",
									"});\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    pm.expect(resp.person.u_salary_5_years).to.eql(+req.salary * 4.2);\r",
									"});\r",
									"\r",
									"for (i in resp.person) {\r",
									"    console.log(resp.person[i]);\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "salary",
									"value": "{{salary}}",
									"type": "text"
								},
								{
									"key": "age",
									"value": "{{age}}",
									"type": "text"
								},
								{
									"key": "name",
									"value": "{{name}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://162.55.220.72:5005/user_info_2",
							"protocol": "http",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"user_info_2"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "3",
			"item": [
				{
					"name": "login",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let s = pm.response.json();\r",
									"let tok = s.token;\r",
									"pm.environment.set(\"token\", tok);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "login",
									"value": "Ivanushka",
									"type": "text"
								},
								{
									"key": "password",
									"value": "qwerty12345",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://162.55.220.72:5005/login",
							"protocol": "http",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "user_info",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\r",
									"  \"title\": \"Generated schema for Root\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"person\": {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"u_age\": {\r",
									"          \"type\": \"number\"\r",
									"        },\r",
									"        \"u_name\": {\r",
									"          \"type\": \"array\",\r",
									"          \"items\": [\r",
									"            {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            {\r",
									"              \"type\": \"number\"\r",
									"            },\r",
									"            {\r",
									"              \"type\": \"number\"\r",
									"            }\r",
									"          ],\r",
									"          \"additionalItems\": false\r",
									"        },\r",
									"        \"u_salary_1_5_year\": {\r",
									"          \"type\": \"number\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"u_age\",\r",
									"        \"u_name\",\r",
									"        \"u_salary_1_5_year\"\r",
									"      ]\r",
									"    },\r",
									"    \"qa_salary_after_12_months\": {\r",
									"      \"type\": \"number\"\r",
									"    },\r",
									"    \"qa_salary_after_6_months\": {\r",
									"      \"type\": \"number\"\r",
									"    },\r",
									"    \"start_qa_salary\": {\r",
									"      \"type\": \"number\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"person\",\r",
									"    \"qa_salary_after_12_months\",\r",
									"    \"qa_salary_after_6_months\",\r",
									"    \"start_qa_salary\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test('Schema is valid', function () {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"let resp = pm.response.json();\r",
									"let req = JSON.parse(request.data);\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    pm.expect(+resp.qa_salary_after_6_months).to.eql(+req.salary * 2);\r",
									"});\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    pm.expect(resp.qa_salary_after_12_months).to.eql(+req.salary * 2.9);\r",
									"});\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    pm.expect(resp.person.u_salary_1_5_year).to.eql(+req.salary * 4);\r",
									"});\r",
									"\r",
									"let sal_user = resp.person.u_salary_1_5_year;\r",
									"\r",
									"pm.environment.set(\"sal_new\", sal_user);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"age\": 35,\r\n    \"salary\": 10000,\r\n    \"name\": \"Ivan\",\r\n    \"auth_token\": \"{{token}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://162.55.220.72:5005/user_info",
							"protocol": "http",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"user_info"
							]
						}
					},
					"response": []
				},
				{
					"name": "new_data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\r",
									"  \"title\": \"Generated schema for Root\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"age\": {\r",
									"      \"type\": \"number\"\r",
									"    },\r",
									"    \"name\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"salary\": {\r",
									"      \"type\": \"array\",\r",
									"      \"items\": [\r",
									"        {\r",
									"          \"type\": \"number\"\r",
									"        },\r",
									"        {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        {\r",
									"          \"type\": \"string\"\r",
									"        }\r",
									"      ],\r",
									"      \"additionalItems\": false\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"age\",\r",
									"    \"name\",\r",
									"    \"salary\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"let resp = pm.response.json();\r",
									"let req = request.data;\r",
									"\r",
									"pm.test('Schema is valid', function () {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    pm.expect(+resp.salary[0]).to.eql(+req.salary);\r",
									"});\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    pm.expect(+resp.salary[1]).to.eql(+req.salary * 2);\r",
									"});\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    pm.expect(+resp.salary[2]).to.eql(+req.salary * 3);\r",
									"});\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    pm.expect(+resp.salary[2]).to.be.greaterThan(+resp.salary[0] && +resp.salary[1]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "age",
									"value": "28",
									"type": "text"
								},
								{
									"key": "salary",
									"value": "10000",
									"type": "text"
								},
								{
									"key": "name",
									"value": "Ivan",
									"type": "text"
								},
								{
									"key": "auth_token",
									"value": "{{token}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://162.55.220.72:5005/new_data",
							"protocol": "http",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"new_data"
							]
						}
					},
					"response": []
				},
				{
					"name": "test_pet_info",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\r",
									"  \"title\": \"Generated schema for Root\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"age\": {\r",
									"      \"type\": \"number\"\r",
									"    },\r",
									"    \"daily_food\": {\r",
									"      \"type\": \"number\"\r",
									"    },\r",
									"    \"daily_sleep\": {\r",
									"      \"type\": \"number\"\r",
									"    },\r",
									"    \"name\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"age\",\r",
									"    \"daily_food\",\r",
									"    \"daily_sleep\",\r",
									"    \"name\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test('Schema is valid', function () {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"let resp = pm.response.json();\r",
									"let req = request.data;\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    pm.expect(+resp.daily_food).to.eql(+req.weight * 0.012);\r",
									"});\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    pm.expect(+resp.daily_sleep).to.eql(+req.weight * 2.5);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "age",
									"value": "35",
									"type": "text"
								},
								{
									"key": "weight",
									"value": "56",
									"type": "text"
								},
								{
									"key": "name",
									"value": "Anna",
									"type": "text"
								},
								{
									"key": "auth_token",
									"value": "{{token}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://162.55.220.72:5005/test_pet_info",
							"protocol": "http",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"test_pet_info"
							]
						}
					},
					"response": []
				},
				{
					"name": "get_test_user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\r",
									"  \"title\": \"Generated schema for Root\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"age\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"family\": {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"children\": {\r",
									"          \"type\": \"array\",\r",
									"          \"items\": {\r",
									"            \"type\": \"array\",\r",
									"            \"items\": [\r",
									"              {\r",
									"                \"type\": \"string\"\r",
									"              },\r",
									"              {\r",
									"                \"type\": \"number\"\r",
									"              }\r",
									"            ],\r",
									"            \"additionalItems\": false\r",
									"          }\r",
									"        },\r",
									"        \"u_salary_1_5_year\": {\r",
									"          \"type\": \"number\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"children\",\r",
									"        \"u_salary_1_5_year\"\r",
									"      ]\r",
									"    },\r",
									"    \"name\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"salary\": {\r",
									"      \"type\": \"number\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"age\",\r",
									"    \"family\",\r",
									"    \"name\",\r",
									"    \"salary\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test('Schema is valid', function () {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"let resp = pm.response.json();\r",
									"let req = request.data;\r",
									"let name_env = pm.environment.get(\"name\");\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    pm.expect(resp.name).to.eql(name_env);\r",
									"});\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    pm.expect(+resp.age).to.eql(+req.age);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "salary",
									"value": "{{sal_new}}",
									"type": "text"
								},
								{
									"key": "age",
									"value": "26",
									"type": "text"
								},
								{
									"key": "name",
									"value": "Ivan",
									"type": "text"
								},
								{
									"key": "auth_token",
									"value": "{{token}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://162.55.220.72:5005/get_test_user",
							"protocol": "http",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"get_test_user"
							]
						}
					},
					"response": []
				},
				{
					"name": "currency",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let s = pm.response.json();\r",
									"let arr_length = s.length;\r",
									"let m = Math.floor(Math.random () * arr_length);\r",
									"let obj = s[m];\r",
									"let obj_rand = obj.Cur_ID;\r",
									"\r",
									"pm.environment.set(\"obj_rand\", \"obj_rand\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "auth_token",
									"value": "{{token}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://54.157.99.22:80/currency",
							"protocol": "http",
							"host": [
								"54",
								"157",
								"99",
								"22"
							],
							"port": "80",
							"path": [
								"currency"
							]
						}
					},
					"response": []
				},
				{
					"name": "curr_byn",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"let s = pm.response.json();\r",
									"\r",
									"for (i = 0; i < s.length; i++) {\r",
									"    if (pm.response.to.have.status(500))\r",
									"    continue;\r",
									"    if (pm.response.to.have.status(500)) {\r",
									"        if (pm.expect(s).to.haveOwnProperty(\"Cur_OfficialRate\")) {\r",
									"            console.log(s[i]);\r",
									"        }\r",
									"    }\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "auth_token",
									"value": "{{token}}",
									"type": "text"
								},
								{
									"key": "curr_code",
									"value": "4",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://54.157.99.22:80/curr_byn",
							"protocol": "http",
							"host": [
								"54",
								"157",
								"99",
								"22"
							],
							"port": "80",
							"path": [
								"curr_byn"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}